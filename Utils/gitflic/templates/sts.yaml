apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gitflic.fullname" . }}
  labels:
    {{- include "gitflic.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "gitflic.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "gitflic.fullname" . }}-headless
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      annotations:
        confChecksum: {{ include (print $.Template.BasePath "/configmap.yaml") .  | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "gitflic.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gitflic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ include "gitflic.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: JAVA_OPTS
            value: "{{ .Values.javaOptions }} -Dspring.config.additional-location=/opt/gitflic/config/application.properties"
          {{- if .Values.db.secretName }}
          - name: POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: {{ .Values.db.secretName }}
                key: "postgres-user-password"
          {{- else }}
          - name: POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: {{ include "gitflic.fullname" . }}-db-user
                key: "postgres-user-password"
          {{- end }}
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: ssh
            containerPort: 22
            protocol: TCP
        #livenessProbe:
        #  httpGet:
        #    path: /
        #    port: http
        #readinessProbe:
        #  httpGet:
        #    path: /
        #    port: http
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: repo-dir
          mountPath: "/opt/gitflic/var/repo/"
        - name: image-dir
          mountPath: "/opt/gitflic/var/img/"
        - name: releases-dir
          mountPath: "/opt/gitflic/var/releases/"
        - name: cicd-dir
          mountPath: "/opt/gitflic/var/cicd/"
        - name: registry-dir
          mountPath: "/opt/gitflic/var/registry/"
        - name: certs-dir
          mountPath: "/opt/gitflic/var/cert/"
        - name: ssh-key
          mountPath: "/opt/gitflic/var/cert/key.pem"
          subPath: "key.pem"
        - name: config-file
          mountPath: "/opt/gitflic/config/application.properties"
          subPath: "application.properties"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: ssh-key
          secret:
            secretName: {{ .Values.volumes.sshKey.secretName }}
        - name: config-file
          configMap:
            name: {{ include "gitflic.fullname" . }}
  volumeClaimTemplates:
  - metadata:
      name: repo-dir
    spec:
      accessModes:
      - {{ .Values.volumes.repoDir.accessModes }}
      {{- if .Values.volumes.repoDir.storageClassName }}
      storageClassName: {{ .Values.volumes.repoDir.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.repoDir.storage }}
  - metadata:
      name: image-dir
    spec:
      accessModes:
        - {{ .Values.volumes.imageDir.accessModes }}
      {{- if .Values.volumes.imageDir.storageClassName }}
      storageClassName: {{ .Values.volumes.imageDir.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.imageDir.storage }}
  - metadata:
      name: releases-dir
    spec:
      accessModes:
        - {{ .Values.volumes.releasesDir.accessModes }}
      {{- if .Values.volumes.releasesDir.storageClassName }}
      storageClassName: {{ .Values.volumes.releasesDir.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.releasesDir.storage }}
  - metadata:
      name: certs-dir
    spec:
      accessModes:
        - {{ .Values.volumes.certsDir.accessModes }}
      {{- if .Values.volumes.certsDir.storageClassName }}
      storageClassName: {{ .Values.volumes.certsDir.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.certsDir.storage }}
  - metadata:
      name: cicd-dir
    spec:
      accessModes:
        - {{ .Values.volumes.cicdDir.accessModes }}
      {{- if .Values.volumes.cicdDir.storageClassName }}
      storageClassName: {{ .Values.volumes.cicdDir.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.cicdDir.storage }}
  - metadata:
      name: registry-dir
    spec:
      accessModes:
        - {{ .Values.volumes.registryDir.accessModes }}
      {{- if .Values.volumes.registryDir.storageClassName }}
      storageClassName: {{ .Values.volumes.registryDir.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.registryDir.storage }}