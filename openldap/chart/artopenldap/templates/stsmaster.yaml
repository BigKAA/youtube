apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "artopenldap.fullname" . }}
  labels:
    {{- include "artopenldap.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.multimaster.replicas }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  selector:
    matchLabels:
      {{- include "artopenldap.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "artopenldap.fullname" . }}-hl
  template:
    metadata:
      annotations:
        {{- if .Values.exporter.enable }}
        {{ .Values.exporter.annotationKeys.path }}: "/metrics"
        {{ .Values.exporter.annotationKeys.port }}: "9330"
        {{ .Values.exporter.annotationKeys.scrape }}: "true"
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/configmapBin: {{ include (print $.Template.BasePath "/cmbin.yaml") . | sha256sum }}
        checksum/configmapLdif: {{ include (print $.Template.BasePath "/cminitldif.yaml") . | sha256sum }}
        {{- if and .Values.ldap.ssl.enable .Values.ldap.ssl.certmanager.enable }}
        checksum/cert: {{ include (print $.Template.BasePath "/certificate.yaml") . | sha256sum }}
        {{- end }}
      labels:
        {{- include "artopenldap.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/var/lib/openldap/bin/initscript.sh"]
          # command: ["/bin/sh"]
          # args: ["-c", "sleep infinity"]
          env:
            - name: LDAP_DEBUG
              value: "{{ .Values.debugLevel }}"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          envFrom:
            - secretRef:
                {{- if .Values.ldap.adminPasswodSecret }}
                name: {{ .Values.ldap.adminPasswodSecret }}
                {{- else }}
                name: {{ include "artopenldap.fullname" . }}-adminpw
                {{- end }}
            - secretRef:
                {{- if .Values.multimaster.RepUserPasswodSecret }}
                name: {{ .Values.multimaster.ReplUserPasswodSecret }}
                {{- else }}
                name: {{ include "artopenldap.fullname" . }}-repluserpw
                {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/openldap/
            - name: initldif
              mountPath: /etc/openldap/slapd.ldif
              subPath: slapd.ldif
            {{- if eq .Values.ldap.dbBackend "hdb" }}
            - name: initldif
              mountPath: /etc/openldap/DB_CONFIG
              subPath: DB_CONFIG
            {{- end }}
            - name: bin
              mountPath: /var/lib/openldap/bin/
            {{- if .Values.ldap.ssl.enable }}
            - name: tls
              mountPath: /var/lib/openldap/certs/
            {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/sbin/slapd"]
          args: 
            - "-4"
            - "-u"
            - "ldap"
            - "-F"
            - "/var/lib/openldap/slapd.d"
            - "-h"
            {{- if .Values.ldap.ssl.enable }}
            - "ldap://0.0.0.0:10389/ ldaps://0.0.0.0:10636/ ldapi://%2Fvar%2Flib%2Fopenldap%2Frun%2Fsldap.sock/"
            {{- else }}
            - "ldap://0.0.0.0:10389/ ldapi://%2Fvar%2Flib%2Fopenldap%2Frun%2Fsldap.sock/"
            {{- end }}
            - "-d"
            - "{{ .Values.debugLevel }}"
          # command: ["/bin/sh"]
          # args: ["-c", "sleep infinity"]
          ports:
            - name: ldap
              containerPort: 10389
              protocol: TCP
            {{- if .Values.ldap.ssl.enable }}
            - name: ldaps
              containerPort: 10636
              protocol: TCP
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}  
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}  
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}  
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/openldap/
            - name: initldif
              mountPath: /etc/openldap/slapd.ldif
              subPath: slapd.ldif
            {{- if eq .Values.ldap.dbBackend "hdb" }}
            - name: initldif
              mountPath: /etc/openldap/DB_CONFIG
              subPath: DB_CONFIG
            {{- end }}
            - name: bin
              mountPath: /var/lib/openldap/bin/
            {{- if .Values.ldap.ssl.enable }}
            - name: tls
              mountPath: /var/lib/openldap/certs/
            {{- end }}
        {{- if .Values.exporter.enable }}
        - name: exporter
          {{- with .Values.exporter.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag }}"
          imagePullPolicy: {{ .Values.exporter.image.pullPolicy }}
          ports:
            - name: exporter
              containerPort: 9330
              protocol: TCP
          envFrom:
          - secretRef:
              {{- if .Values.ldap.adminPasswodSecret }}
              name: {{ .Values.ldap.adminPasswodSecret }}
              {{- else }}
              name: {{ include "artopenldap.fullname" . }}-adminpw
              {{- end }}
          env:
            - name: LDAP_USER
              value: "{{ .Values.ldap.olcRootDN }}"
            - name: INTERVAL
              value: "{{ .Values.exporter.interval }}"
            - name: PROM_ADDR
              value: "0.0.0.0:9300"
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: initldif
          configMap:
            name: {{ include "artopenldap.fullname" . }}-initldif
        - name: bin
          configMap:
            name: {{ include "artopenldap.fullname" . }}-bin
            defaultMode: 0777
        {{- if .Values.ldap.ssl.enable }}
        - name: tls
          secret:
            secretName: {{ .Values.ldap.ssl.secretName }}
        {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: 
      - ReadWriteOnce
      {{- if .Values.volumes.data.storageClassName }}
      storageClassName: {{ .Values.volumes.data.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.data.storage }}