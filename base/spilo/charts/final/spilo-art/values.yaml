# Configuration parameters
nameOverride: ""
fullnameOverride: ""

image:
  name: registry.opensource.zalan.do/acid/spilo-15
  tag: 3.0-p1
  imagePullSecrets: IfNotPresent

podManagementPolicy: Parallel
replicas: 2

spilo:
  env:
    kubernetesRoleLabel: role
    kubernetesScopeLabel: spilo-cluster
    kubernetesLabels:
      application: spilo
    ## https://github.com/zalando/patroni#yaml-configuration
    configuration: |
      bootstrap:
        initdb:
          - auth-host: md5
          - auth-local: md5

serviceAccount:
  name: ""

service:
  # ClusterIP, NodePort или LoadBalancer
  type: ClusterIP
  name: postgresql
  port: 5432
  nodePort: 32345
  # Поле .spec.loadBalancerIP для Service типа LoadBalancer устарело в Kubernetes версии v1.24.
  # Рекомендуется обратиться к документации поставщика услуг, для уточнения как использовать аннотации
  # для конфигурации сервиса типа LoadBalancer.
  annotations: {}
  #  metallb.universe.tf/loadBalancerIPs: 192.168.1.100

servicereplica:
  enable: false
  # ClusterIP, NodePort или LoadBalancer
  type: ClusterIP
  name: postgresql
  port: 5432
  nodePort: 32345
  # Поле .spec.loadBalancerIP для Service типа LoadBalancer устарело в Kubernetes версии v1.24.
  # Рекомендуется обратиться к документации поставщика услуг, для уточнения как использовать аннотации
  # для конфигурации сервиса типа LoadBalancer.
  annotations: {}
  #  metallb.universe.tf/loadBalancerIPs: 192.168.1.100

# Параметры PVC для хранения файлов базы данных.
data:
  storageClassName: ""
  storage: 2Gi

secret:
  # Secret создаваемый в ручную.
  # ---
  # apiVersion: v1
  # kind: Secret
  # metadata:
  #   name: test-spilo-art
  # type: Opaque
  # stringData:
  #   admin-password: password
  #   replication-password: password
  #   superuser-password: password
  # ...
  # Если определен параметр externalSecretName, остальные переменные из раздела secret не используются.
  externalSecretName: ""
  defaultPasswords: {}
  #  superuser: password
  #  replication: password
  #  admin: password

probes: {}
#  livenessProbe:
#    # postgres check
#    exec:
#      command: [ "psql", "-U", "postgres", "-c", "SELECT 1" ]
#    initialDelaySeconds: 60
#    periodSeconds: 10
#  readinessProbe:
#    # patroni check
#    tcpSocket:
#      port: 8008
#    initialDelaySeconds: 20
#    periodSeconds: 20

resources: {}
#  limits:
#    cpu: 100m
#    memory: 128Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

nodeAffinity: {}
#  nodeSelectorTerms:
#    - matchExpressions:
#      - key: db
#        operator: In
#        values:
#          - spilo

tolerations: []
#- key: "key1"
#  operator: "Equal"
#  value: "value1"
#  effect: "NoSchedule"

annotations: {}
#  annotation1: value
#  annotation2: value

podAnnotations: {}
#  podAnnotation1: value
#  podAnnotation2: value

backup:
  enable: false
  # Если используется готовый PVC, укажите его имя.
  externalPvcName: ""
  # Не удалять PVC после удаления чарта.
  dontDeletePvc: false
  # Время выполнения скрипта резервного копирования в формате crontab
  crontabTime: "00 01 * * *"
  PVC:
    # storageClassName: "managed-nfs-storage"
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 2Gi