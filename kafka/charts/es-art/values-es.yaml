elasticsearch:
  global:
    storageClass: "managed-nfs-storage"
    elasticsearch:
      service:
        name: elasticsearch
        ports:
          restAPI: 9200
    kibanaEnabled: true
  nameOverride: "es"
  fullnameOverride: "es"
  clusterName: logs
  containerPorts:
    restAPI: 9200
    transport: 9300
  image:
    registry: docker.io
    repository: bitnami/elasticsearch
    tag: 8.2.3-debian-11-r4
    pullPolicy: IfNotPresent
  security:
    enabled: true
    elasticPassword: "password"
    tls:
      autoGenerated: true
      usePemCerts: false
      keystorePassword: "password"
      truststorePassword: "password"
      keyPassword: "password"
  service:
    type: ClusterIP
    ports:
      restAPI: 9200
      transport: 9300
  ingress:
    enabled: true
    pathType: Prefix
    hostname: es.kryukov.local
    path: /
    ingressClassName: "system-ingress"
  master:
    masterOnly: true
    replicaCount: 2
    nameOverride: "es-master"
    fullnameOverride: "es-master"
    resources:
      limits: {}
      requests:
        cpu: 250m
        memory: 256Mi
    heapSize: 128m
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - es-master
            - key: role
              operator: In
              values:
                - es-master
          topologyKey: kubernetes.io/hostname
    persistence:
      enabled: true
      storageClass: "managed-nfs-storage"
      accessModes:
        - ReadWriteOnce
      size: 8Gi
  data:
    replicaCount: 2
    nameOverride: "es-data"
    fullnameOverride: "es-data"
    updateStrategy:
      type: RollingUpdate
    resources:
      limits: {}
      requests:
        cpu: 25m
        memory: 1024Mi
    heapSize: 1024m
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - es-data
              - key: role
                operator: In
                values:
                  - es-data
          topologyKey: kubernetes.io/hostname
    persistence:
      enabled: true
      storageClass: "managed-nfs-storage"
      accessModes:
        - ReadWriteOnce
      size: 8Gi
  coordinating:
    replicaCount: 1
    resources:
      limits: {}
      requests:
        cpu: 25m
        memory: 256Mi
    heapSize: 128m
  ingest:
    replicaCount: 1
    containerPorts:
      restAPI: 9200
      transport: 9300
    resources:
      limits: {}
      requests:
        cpu: 25m
        memory: 256Mi
    heapSize: 128m
  metrics:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/elasticsearch-exporter
      tag: 1.3.0-debian-11-r9
      pullPolicy: IfNotPresent
    service:
      type: ClusterIP
      port: 9114
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9114"
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9114"

  volumePermissions:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/bitnami-shell
      tag: 11-debian-11-r8
      pullPolicy: IfNotPresent
  sysctlImage:
    enabled: true
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 11-debian-11-r8
  kibana:
    image:
      debug: true
    elasticsearch:
      hosts:
        - '{{ include "elasticsearch.service.name" . }}'
      port: '{{ include "elasticsearch.service.ports.restAPI" . }}'
      security:
        auth:
          enabled: true
          createSystemUser: true
          kibanaPassword: "password"
          elasticsearchPasswordSecret: "es"
        tls:
          ## @param elasticsearch.security.tls.enabled Set to 'true' if Elasticsearch API uses TLS/SSL (HTTPS)
          ##
          enabled: true
          ## @param elasticsearch.security.tls.verificationMode Verification mode for SSL communications.
          ## Supported values: full, certificate, none.
          ## Ref: https://www.elastic.co/guide/en/kibana/7.x/settings.html#elasticsearch-ssl-verificationmode
          verificationMode: "full"
          ## @param elasticsearch.security.tls.existingSecret Name of the existing secret containing Elasticsearch Truststore or CA certificate. Required unless verificationMode=none
          ##
          existingSecret: "es-master-crt"
          ## @param elasticsearch.security.tls.usePemCerts Set to 'true' to use PEM certificates instead of PKCS12.
          ##
          usePemCerts: true
          ## @param elasticsearch.security.tls.truststorePassword Password to access the PKCS12 trustore in case it is password-protected.
          ##
          truststorePassword: "password"
          ## @param elasticsearch.security.tls.passwordsSecret Name of a existing secret containing the Truststore password
          ##
          passwordsSecret: ""
    persistence:
      enabled: true
      storageClass: "managed-nfs-storage"
      accessModes:
        - ReadWriteOnce
      size: 5Gi
    volumePermissions:
      enabled: true
    resources:
      limits:
      requests:
        cpu: 100m
        memory: 256Mi
    ingress:
      enabled: true
      pathType: Prefix
      hostname: kibana.kryukov.local
      path: /
