apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  # token: token
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
localAPIEndpoint:
  advertiseAddress: {{ hostvars[groups['k8s_masters'][0]].ansible_facts.default_ipv4.address }}
  bindPort: 6443
nodeRegistration:
  criSocket: {{ cri_socket }}
  imagePullPolicy: IfNotPresent
  name: {{ ansible_facts.nodename }}
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
certificatesDir: /etc/kubernetes/pki
clusterName: {{ kube_domain_name }}
controllerManager: {}
dns: {}
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: {{ imageRepository }}
apiServer:
  timeoutForControlPlane: 4m0s
  extraArgs:
    authorization-mode: Node,RBAC
    bind-address: 0.0.0.0
    service-cluster-ip-range: {{ service_cidr }}
    service-node-port-range: 30000-32767
kubernetesVersion: {{ kube_version }}
{% if ha_cluster_virtual_ip is defined and ha_cluster_virtual_ip != "" %}
controlPlaneEndpoint: {{ ha_cluster_virtual_ip }}:{{ ha_cluster_virtual_port }}
{% endif %}
networking:
  dnsDomain: {{ kube_domain_name }}
  podSubnet: {{ pod_network_cidr }}
  serviceSubnet: {{ service_cidr }}
scheduler: {}
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
clusterCIDR: {{ pod_network_cidr }}
ipvs:
  strictARP: True
mode: ipvs