---
- name: Add repo kubernetes
  when: ansible_facts['os_family'] == "RedHat"
  yum_repository:
    name: kubernetes
    description: 'Base programs for k8s'
    baseurl: 'https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64'
    gpgcheck: yes
    gpgkey: 
      - 'https://packages.cloud.google.com/yum/doc/yum-key.gpg'
      - 'https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg'

- name: Install packages dnf
  dnf:
    name:
      - net-tools
      - mc
      - vim
      - git
      - bash-completion
      - nfs-utils
      - python3
      - tar
      - rsyslog
      - containerd
      - kubectl-{{ kube_version }}-0.x86_64
      - kubelet-{{ kube_version }}-0.x86_64
      - kubeadm-{{ kube_version }}-0.x86_64
    state: latest
  when: ansible_facts['os_family'] == "RedHat"

- name: Install packages apt
  apt:
    name:
      - net-tools
      - mc
      - vim
      - git
      - bash-completion
      - nfs-utils
      - python3
      - tar
      - rsyslog
      - containerd
    state: latest
  when: ansible_facts['os_family'] == "Debian"

- name: Enable rsyslog
  service:
    name: rsyslog
    state: started
    enabled: yes

- name: Disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no

- name: Check is swap enable
  shell: swapon
  register: swap_present
  changed_when: false
  ignore_errors: true

- name: If swap is enabled - disable it
  shell: swapoff -a
  when: swap_present.stdout != ""

- name: Disable SWAP in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*\s*swap\s*.*)$'
    replace: '# \1'

- name: Check Disable SELinux
  selinux:
    state: disabled
  register: selinux_ret

- name: Disable SELinux
  shell: setenforce 0
  when: selinux_ret.reboot_required

- name: Containerd
  service:
    name: containerd
    state: started
    enabled: yes

- name: Set crictl.yaml
  copy: 
    src: crictl.yaml
    dest: /etc/crictl.yaml
    owner: root
    mode: 644

- name: Load modules
  modprobe:
    name: br_netfilter

- name: Load module permanet
  copy:
    src: modules-cubernetes.conf
    dest: /etc/modules-load.d/modules-cubernetes.conf

- name: Set Sysctl on all nodes
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - name: net.ipv4.ip_forward
      value: 1
    - name: net.bridge.bridge-nf-call-iptables
      value: 1
    - name: net.bridge.bridge-nf-call-ip6tables
      value: 1

- name: Set Sysctl on master node(s)
  when: inventory_hostname in groups['k8s_masters']
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - name: net.ipv4.ip_nonlocal_bind
      value: 1