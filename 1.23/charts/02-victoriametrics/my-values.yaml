victoria-metrics-single:
  server:
    priorityClassName: "low-priority"
    retentionPeriod: 5h
    extraArgs:
      http.pathPrefix: "/vm"
      selfScrapeInterval: "15s"
      loggerLevel: "INFO"
    persistentVolume:
      storageClass: "managed-nfs-storage"
      size: "10Gi"
    resources:
      requests:
        cpu: 200m
        memory: 500Mi
      limits:
        cpu: "1"
        memory: 2Gi
    readinessProbe:
      httpGet:
        path: /vm/health
        port: http
      initialDelaySeconds: 5
      periodSeconds: 15
      timeoutSeconds: 5
      failureThreshold: 3
    livenessProbe:
      httpGet:
        path: /vm/metrics
        port: victoria
      initialDelaySeconds: 5
      periodSeconds: 15
      timeoutSeconds: 5
    ingress:
      enabled: true
      annotations:
        ingress.kubernetes.io/rewrite-target: "/"
        kubernetes.io/ingress.class: "system-ingress"
        certmanager.k8s.io/cluster-issuer: monitoring-issuer
      hosts:
        - name: "mon.kryukov.local"
          path: /prometheus
          port: 9090
      tls:
        secretName: mon-tls
        hosts:
          - mon.kryukov.local
    statefulSet:
      enabled: true
      podManagementPolicy: Parallel
    scrape:
      enabled: false
      extraScrapeConfigs:
        - job_name: 'kube-controller'
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                  - kube-system
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
            - source_labels: [ __meta_kubernetes_pod_name ]
              action: keep
              regex: 'kube-controller-.*'
            - source_labels: [ __address__ ]
              action: replace
              target_label: __address__
              regex: (.+?)(\\:\\d+)?
              replacement: $1:10257
        - job_name: 'kube-scheduller'
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                  - kube-system
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
            - source_labels: [ __meta_kubernetes_pod_name ]
              action: keep
              regex: kube-scheduler-.*
            - source_labels: [ __address__ ]
              action: replace
              target_label: __address__
              regex: (.+?)(\\:\\d+)?
              replacement: $1:10259
        - job_name: 'node-exporter'
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [ __meta_kubernetes_endpoints_name ]
              regex: 'node-exporter'
              action: keep
        - job_name: 'kube-state-metrics'
          static_configs:
            - targets: [ 'kube-state-metrics.kube-system.svc.cluster.local:8080' ]
        - job_name: 'ingress-nginx-endpoints'
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                  - ingress-nginx
          relabel_configs:
            - action: labelmap
              regex: "__meta_(.+)"
              replacement: "meta_${1}"
            - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
              action: keep
              regex: true
            - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scheme ]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
              action: replace
              target_label: __address__
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
            - source_labels: [ __meta_kubernetes_service_name ]
              regex: prometheus-server
              action: drop

