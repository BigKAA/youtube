---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
rules:
- apiGroups: ["dex.coreos.com"] # API group created by dex
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create"] # To manage its own resources, dex must be able to create customresourcedefinitions
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex           # Service account assigned to the dex pod, created above
  namespace: dex  # The namespace dex is running in
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
  namespace: dex
data:
  config.yaml: |
    issuer: https://dex.kryukov.local
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      http: 0.0.0.0:5555
    logger:
      level: info
      format: json
    oauth2:
      passwordConnector: local
    #  skipApprovalScreen: true
    #  alwaysShowLoginScreen: true

    staticClients:
      - id: kiali
        redirectURIs:
        - 'https://kiali.kryukov.local/kiali'
        name: 'Kiali'
        secret: ZXvvbX32ZS1hcHAtc2VjcmV1

    enablePasswordDB: true
    staticPasswords:
      - email: "artur@kryukov.local"
        # echo password | htpasswd -BinC 10 admin | cut -d: -f2
        hash: "$2y$10$Ewnzu3BUo4WYwIo9tNkfqO3VaK6uHbycCGTIUjiIUQWdm03NgvDNS"
        username: "artur"
        userID: "08a8684b-db89-4b73-91a9-3cd1221f0000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      serviceAccountName: dex
      containers:
      - image: ghcr.io/dexidp/dex:v2.42.1
        name: dex
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]
        ports:
        - name: http
          containerPort: 5555
        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5555
            scheme: HTTP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: dex
spec:
  type: ClusterIP
  ports:
  - name: dex
    port: 5555
    protocol: TCP
    targetPort: 5555
  selector:
    app: dex
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: dex
  namespace: dex
spec:
  parentRefs:
  - name: kiali-support
    sectionName: https
    namespace: istio-system
  hostnames:
  - dex.kryukov.local
  rules:
  - backendRefs:
    - name: dex
      port: 5555
    